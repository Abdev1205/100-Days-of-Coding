int leftIndex(vector<int> arr, int n, int x)
{
  int start = 0;
  int end = n - 1;
  int ans = n;
  while (start <= end)
  {
    int mid = start + (end - start) / 2;
    if (arr[mid] < x)
    {
      ans = mid;
      start = mid + 1;
    }
    else
    {
      end = mid - 1;
    }
  }
}

int rightIndex(vector<int> arr, int n, int x)
{
  int start = 0;
  int end = n - 1;
  int ans = n;
  while (start <= end)
  {
    int mid = start + (end - start) / 2;
    if (arr[mid] > x)
    {
      ans = mid;
      end = mid - 1;
    }
    else
    {
      start = mid + 1;
    }
  }
}

int count(vector<int> &arr, int n, int x)
{
  int left = leftIndex(arr, n, x);
  int right = rightIndex(arr, n, x);
  int ans = right - left;
  return ans;
}
