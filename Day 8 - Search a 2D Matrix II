class Solution
{
public:
  bool searchMatrix(vector<vector<int>> &matrix, int target)
  {
    int m = matrix.size();
    if (m == 0)
    { // checking row is empty or not
      return false;
    }
    int n = matrix[0].size();
    if (n == 0)
    { // checking column is empty or not
      return false;
    }
    for (int i = 0; i < m; i++)
    {
      // using binary search
      int start = 0;
      int end = n - 1;
      while (start <= end)
      {
        int mid = start + (end - start) / 2; // intializing mid
        if (matrix[i][mid] == target)
        { // if target found we will return true;
          return true;
        }
        // if mid is less than target so we have to search in right side and update start=mid+1;
        else if (matrix[i][mid] < target)
        {
          start = mid + 1;
        }
        // else we will search in left by updating end = mid-1;
        else
        {
          end = mid - 1;
        }
      }
    }
    // if true in not return which mean target is not found so we will return
    return false;
  }
};
